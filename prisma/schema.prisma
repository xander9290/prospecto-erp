generator client {
  provider = "prisma-client-js"
  output   = "../generate/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Partner {
  id String @id @default(cuid())

  // datos personales
  name         String
  displayName  String  @unique @map("display_name")
  email        String?
  phone        String?
  street       String?
  colony       String?
  crossStreets String? @map("cross_streets")
  city         String?
  province     String?

  // propiedades de modelo
  state       String?
  displayType PartnerType @default(INTERNAL)

  // relaciones
  User User?

  imageId String? @unique @map("image_id")
  Image   Image?  @relation("EntityImage", fields: [imageId], references: [id])

  userId String? @map("user_id")
  UserId User?   @relation("AgentUser", fields: [userId], references: [id])

  createdById String? @map("created_by")
  CreateUid   User?   @relation("CreateUid", fields: [createdById], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([name, displayName, phone])
  @@map("partners")
}

enum PartnerType {
  CUSTOMER
  SUPPLIER
  INTERNAL
}

model User {
  id          String    @id @default(cuid())
  state       String    @default("no_active")
  password    String
  lastLogin   DateTime? @map("last_login")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  userName    String    @unique @map("user_name")
  displayName String    @unique @map("display_name")
  email       String    @unique
  Partner     Partner   @relation(fields: [partnerId], references: [id])
  darkMode    Boolean   @default(false) @map("dark_mode")
  createdById String?   @map("created_by")

  Partners     Partner[] @relation("CreateUid")
  PartnerLeads Partner[] @relation("AgentUser")

  @@index([displayName, userName, email])
  @@map("users")
}

model Image {
  id         String  @id @default(cuid())
  url        String
  publicId   String  @map("public_id")
  entityType String?

  Partner Partner? @relation("EntityImage")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("images")
}

model Request {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  accepted  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([name, email])
  @@map("requests")
}

model Counter {
  id    String @id
  value Int

  @@map("counters")
}
